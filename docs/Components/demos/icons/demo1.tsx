import React from 'react';
import { Space, Tooltip, message } from 'antd';
import {
  ServiceLogo,
  WorkBench,
  MineWorkOrder,
  CallBack,
  FaultOverview,
  FaultPublish,
  FaultAccount,
  FaultG,
  FaultFunc,
  EfficiencyArea,
  EfficiencyCenter,
  EfficiencyInput,
  EfficiencyBak,
  EfficiencyMonth,
  EfficiencyDevops,
  EfficiencyCost,
  EfficiencyStatics,
  EfficiencyTotal,
  EfficiencyPublish,
  EfficiencyCheck,
  EfficiencyRate,
  EfficiencySystem,
  EfficiencyForbidden,
  ResourceOverview,
  ResourceNet,
  ResourceData,
  ResourceCost,
  ResourceGroup,
  ResourceHost,
  ResourceApply,
  ResourceDevops,
  MonitorStatics,
  MonitorOverview,
  MonitorManage,
  MonitorTotal,
  MonitorHistory,
  MonitorCycle,
  MonitorZabbix,
  KnowledgeOverview,
  KnowledgeDocument,
  KnowledgeLib,
  KnowledgeMap,
  KnowledgeAsk,
  KnowledgeNo,
  CmsChatOps,
  CmsFe,
  CmsBe,
  Cms404,
  CmsValidate,
  CmsIcons,
  IamBM,
  IamUser,
  IamUserGroup,
  IamRole,
  IamAuth,
  LoginLog,
  HandleLog,
  ReportResource,
  ReportMine,
  ReportCenter,
  ReportData,
  ReportDataScreen,
  DomainNet,
  DomainResource,
  MonitorIndex,
  TriggerIndex,
  MonitorInstance,
  DetailIcon,
  DataCenterIcon,
  CloudCenterIcon,
  OtherIcon,
  DepOnceIcon,
  ResAllocationIcon,
  AppAllocationIcon,
  OtherMoney,
  PropertyMoney,
  BillMoney,
  AlarmCenter,
  Statics,
  ManageConfig,
  MonitorItem,
  MonitorTemplate,
  TriggerNumber,
  Percent,
  MonitorServer,
  AppItem,
  ResetColumnWidthIcon,
  DSFW,
  SixSide,
} from '@cgf-tools/icons';

import { CopyToClipboard } from 'react-copy-to-clipboard';

const css = {
  fontSize: '36px',
};

const cMap = {
  ServiceLogo,
  WorkBench,
  MineWorkOrder,
  CallBack,
  FaultOverview,
  FaultPublish,
  FaultAccount,
  FaultG,
  FaultFunc,
  EfficiencyArea,
  EfficiencyCenter,
  EfficiencyInput,
  EfficiencyBak,
  EfficiencyMonth,
  EfficiencyDevops,
  EfficiencyCost,
  EfficiencyStatics,
  EfficiencyTotal,
  EfficiencyPublish,
  EfficiencyCheck,
  EfficiencyRate,
  EfficiencySystem,
  EfficiencyForbidden,
  ResourceOverview,
  ResourceNet,
  ResourceData,
  ResourceCost,
  ResourceGroup,
  ResourceHost,
  ResourceApply,
  ResourceDevops,
  MonitorStatics,
  MonitorOverview,
  MonitorManage,
  MonitorTotal,
  MonitorHistory,
  MonitorCycle,
  MonitorZabbix,
  KnowledgeOverview,
  KnowledgeDocument,
  KnowledgeLib,
  KnowledgeMap,
  KnowledgeAsk,
  KnowledgeNo,
  CmsChatOps,
  CmsFe,
  CmsBe,
  Cms404,
  CmsValidate,
  CmsIcons,
  IamBM,
  IamUser,
  IamUserGroup,
  IamRole,
  IamAuth,
  LoginLog,
  HandleLog,
  ReportResource,
  ReportMine,
  ReportCenter,
  ReportData,
  ReportDataScreen,
  DomainNet,
  DomainResource,
  MonitorIndex,
  TriggerIndex,
  MonitorInstance,
  DetailIcon,
  DataCenterIcon,
  CloudCenterIcon,
  OtherIcon,
  DepOnceIcon,
  ResAllocationIcon,
  AppAllocationIcon,
  OtherMoney,
  PropertyMoney,
  BillMoney,
  AlarmCenter,
  Statics,
  ManageConfig,
  MonitorItem,
  MonitorTemplate,
  TriggerNumber,
  Percent,
  MonitorServer,
  AppItem,
  ResetColumnWidthIcon,
  DSFW,
  SixSide,
};

const keys = Object.keys(cMap);

export interface DemoProps {}

const Demo: React.FC<DemoProps> = () => {
  return (
    <Space size="large" css={{ flexWrap: 'wrap' }}>
      {keys.map(key => {
        return (
          <CopyToClipboard
            key={key}
            text={`<${key} />`}
            onCopy={() => {
              message.success('复制成功');
            }}
          >
            <Tooltip title="点击复制">
              {React.createElement(cMap[key as keyof typeof cMap], { style: css })}
            </Tooltip>
          </CopyToClipboard>
        );
      })}
    </Space>
  );
};

export default React.memo(Demo);
